[{"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/index.js":"1","/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/reportWebVitals.js":"2","/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/App.js":"3","/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/FileUpload.js":"4","/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/EditExtracted.js":"5"},{"size":500,"mtime":1617032784084,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1617032784085,"results":"8","hashOfConfig":"7"},{"size":147,"mtime":1617032784081,"results":"9","hashOfConfig":"7"},{"size":2265,"mtime":1617033820218,"results":"10","hashOfConfig":"7"},{"size":28569,"mtime":1617033846948,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13dhf3k",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/index.js",[],"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/reportWebVitals.js",[],"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/App.js",[],"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/FileUpload.js",[],"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/leitor_contratos/react/src/EditExtracted.js",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React from 'react';\nimport './App.css';\nimport logo from './logo_kinea.png'\nimport Modal from 'react-awesome-modal';\n\nvar Loader = require('react-loader');\n// \"start\": \"PORT=3031 react-scripts start\",\n// \"start\": \"set PORT=3031 && react-scripts start\",\nclass EditExtracted extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        loaded: true,\n        'data': props.data, //passed prop as initial value\n        'intro': false,\n        'qr': false,\n        'multas': false,\n        'garantia': false,\n        'good':false,\n        'bad':false\n    }\n    console.log(this.state.data)\n    this.submit = {}\n    this.check = {}\n    this.descontos = []\n    for(let i = 0; i < this.props.data.pdfContent.raw.descontos.length;i++){this.descontos.push({})}\n\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    }\n\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({loaded:false});\n        let final = {}\n        for (let i in this.submit){\n            if (this.check[i].checked){\n                if (['tipico','proporcional','reajuste_positivo'].indexOf(this.submit[i].name) > -1){\n                    if(this.submit[i].value == 'true'){ final[this.submit[i].name] = true}\n                    else{ final[this.submit[i].name] = false }\n                }\n                else if (['andar_galpao','area','aviso_previo','data_pagamento_aluguel','data_pagamento_encargos','multa_rescisao_antecipado','periodo_carencia','vagas'].indexOf(this.submit[i].name) > -1){\n                    final[this.submit[i].name] = Number(this.submit[i].value)\n                }\n                else{\n                    final[this.submit[i].name] = this.submit[i].value\n                }\n                \n            } \n            else{\n                if (['tipico','proporcional','reajuste_positivo'].indexOf(this.submit[i].name) > -1){\n                    if(this.submit[i].defaultValue == 'true'){ final[this.submit[i].name] = true}\n                    else{ final[this.submit[i].name] = false }\n                }\n                else if (['andar_galpao','area','aviso_previo','data_pagamento_aluguel','data_pagamento_encargos','multa_rescisao_antecipado','periodo_carencia','vagas'].indexOf(this.submit[i].name) > -1){\n                    final[this.submit[i].name] = Number(this.submit[i].defaultValue)\n                }\n                else{\n                    final[this.submit[i].name] = this.submit[i].defaultValue\n                }\n                \n            } \n        }\n        final['descontos'] = []\n        for (let j in this.descontos) {\n            let temp = {}\n            if (this.descontos[j]['checked'].checked){\n                temp['data_inicio_desconto'] = this.descontos[j]['data_inicio'].value\n                temp['data_final_desconto'] = this.descontos[j]['data_fim'].value\n                temp['aluguel'] = this.descontos[j]['valor'].value\n            }\n            else{\n                temp['data_inicio_desconto'] = this.descontos[j]['data_inicio'].defaultValue \n                temp['data_final_desconto'] = this.descontos[j]['data_fim'].defaultValue \n                temp['aluguel'] = this.descontos[j]['valor'].defaultValue \n            }\n            final['descontos'].push(temp)\n        }\n        console.log(final)\n        // const data = new FormData();\n        // data.append('dados', JSON.stringify(final));\n        fetch('http://localhost:5051/salesforce', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(final),\n            }).then((response) => {\n                // response.json().then((body) => {\n                //   console.log(body)\n                // });\n                console.log(response.status)\n                if (response.status == 500) {\n                    // throw new Error(\"Bad response from server\");\n                    this.openModal('bad')\n                }\n                if (response.status == 200) {\n                    // throw new Error(\"Bad response from server\");\n                    this.openModal('good')\n                }\n              });\n              \n    }\n\n    // handleInputChange(event) {\n    //     const target = event.target;\n    //     // const value = target.type === 'checkbox' ? target.checked : target.value;\n    //     const value = target.value;\n    //     const name = target.name;\n    \n    //     // this.setState({\n    //     //   [name]: value\n    //     // });\n    //     this.setState(final => ({\n    //         ...final,\n    //         [name]: value}))\n    //     // console.log(this.state)\n    //   }\n\n   to_list() {\n    let lista = [];\n    for (var key in this.props.data.pdfContent.raw) {\n        lista.push([key,this.props.data.pdfContent.raw[key],this.props.data.pdfContent.tratado[key]])\n    }\n    return lista\n    }\n\n    openModal(name) {\n        // console.log(this.state.data.pdfContent.big_text)\n        this.setState({\n            [name] : true,\n            loaded: true\n        });\n    }\n\n    closeModal(name) {\n        this.setState({\n            [name] : false\n        });\n    }\n\n  render() {\n    //   console.log(this.props.data.pdfContent.raw)\n    // let items = this.to_list()\n    // let itemList=items.map((item)=>{\n    //     return(\n    //         <div className='card_data'>\n    //              <h4 className='title'>{item[0]}</h4>\n    //              <p className='subtitle'>{item[1]}</p>\n    //              <input type='text' className='data_edit' defaultValue={item[2]}></input>\n    //          </div>\n    //     ) \n    //   })\n\n        let itemList=this.props.data.pdfContent.tratado.descontos.map((item,index)=>{\n        return(\n            <div className='card_data'>\n                 <h4 className='title'>Desconto</h4>\n                 <p className='subtitle'>Prazo</p>\n                 {(!item.data_inicio_desconto) ? <p className='subtitle'>{item.periodo[0]}</p>:''}\n                 <input ref={(c) => this.descontos[index]['data_inicio'] = c} type='text' className='data_edit_big' defaultValue={item.data_inicio_desconto}></input>\n                 <input ref={(c) => this.descontos[index]['data_fim'] = c} style={{marginTop: 6 + 'px'}} type='text' className='data_edit_big' defaultValue={item.data_final_desconto}></input>\n                 <p className='subtitle'>Valor</p>\n                 <input ref={(c) => this.descontos[index]['valor'] = c} type='text' className='data_edit' defaultValue={item.desconto}></input>\n                 <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.descontos[index]['checked'] = c} />Alterado</label>       \n             </div>\n        ) \n      })\n      \n    return (\n      <div className='total_grid'>\n        <h1 className='title2' >Confira o Conteúdo Extraído</h1>\n        <div className='data_grid'>\n            <button name='intro' className='b_clausulas' onClick={() => this.openModal('intro')}>Início</button>\n            <button name='qr' className='b_clausulas' onClick={() => this.openModal('qr')}>Quadro Resumo</button>\n            <button name='multas' className='b_clausulas' onClick={() => this.openModal('multas')}>Multas</button>\n            <button name='garantia' className='b_clausulas' onClick={() => this.openModal('garantia')}>Garantia</button>\n        </div>\n        <Modal visible={this.state.intro} className='modal-body'  effect=\"fadeInUp\" onClickAway={() => this.closeModal('intro')}>\n                    <div className='card_data'>\n                        <h1>Início</h1>\n                        <p className='content'>{this.state.data.pdfContent.big_text.intro}</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('intro')}>Fechar</a>\n                    </div>     \n        </Modal>\n        <Modal visible={this.state.qr} className='modal-body'   effect=\"fadeInUp\" onClickAway={() => this.closeModal('qr')}>\n                    <div className='card_data'>\n                        <h1>Quadro Resumo</h1>\n                        <p>{this.state.data.pdfContent.big_text.qr}</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('qr')}>Fechar</a>\n                    </div>     \n        </Modal>\n        <Modal visible={this.state.multas} className='modal-body' effect=\"fadeInUp\" onClickAway={() => this.closeModal('multas')}>\n                    <div className='card_data'>\n                        <h1>Cláusula de Multa</h1>\n                        <p>{this.state.data.pdfContent.big_text.multa}</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('multas')}>Fechar</a>\n                    </div>     \n        </Modal>\n        <Modal visible={this.state.garantia} className='modal-body'   effect=\"fadeInUp\" onClickAway={() => this.closeModal('garantia')}>\n                    <div className='card_data'>\n                        <h1>Cláusula de Garantia</h1>\n                        <p>{this.state.data.pdfContent.big_text.garantia}</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('garantia')}>Fechar</a>\n                    </div>     \n        </Modal>\n        <form>\n        <div className='data_grid'>\n            <div className='card_data'>\n                <h4 className='title'>Contrato Típico</h4>\n                <p className='subtitle'>{this.props.data.pdfContent.raw.tipico}</p>\n                {/* onChange={this.handleInputChange}  */}\n                <input name='tipico' type='text' className='data_edit' defaultValue={this.state.data.pdfContent.tratado.tipico} ref={(c) => this.submit.tipico = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.tipico = c} />Alterado</label>       \n                \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Locatária</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.locataria}</p>\n                <input name = 'locataria' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.locataria} ref={(c) => this.submit.locataria = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.locataria = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Tipo do imóvel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.tipo_imovel}</p>\n                <input name = 'tipo_imovel' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.tipo_imovel} ref={(c) => this.submit.tipo_imovel = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.tipo_imovel = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Nome do Imóvel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.nome }</p>\n                <input name = 'nome' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.nome } ref={(c) => this.submit.nome = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.nome = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Área do Imóvel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.area}</p>\n                <input name = 'area' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.area} ref={(c) => this.submit.area = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.area = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                {/* <h4 className='title'>Andar ou Galpão</h4> */}\n                {this.state.data.pdfContent.raw.andar ? <h4 className='title'>Andar</h4>:''}\n                {this.state.data.pdfContent.raw.galpao ? <h4 className='title'>Galpão</h4>:''}\n                <p className='subtitle'>{this.state.data.pdfContent.raw.andar || this.state.data.pdfContent.raw.galpao }</p>\n                <input name = 'andar_galpao' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.andar ||this.state.data.pdfContent.tratado.galpao} ref={(c) => this.submit.andar_galpao = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.andar_galpao= c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                {/* <h4 className='title'>Pavimento/Torre ou Docas</h4> */}\n                {this.state.data.pdfContent.raw.torre_docas ? <h4 className='title'>Torre ou Pavimento</h4>:''}\n                {this.state.data.pdfContent.raw.docas ? <h4 className='title'>Docas</h4>:''}\n                <p className='subtitle'>{this.state.data.pdfContent.raw.torre_docas  || this.state.data.pdfContent.raw.docas }</p>\n                <input name = 'torre_pavimento' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.torre_docas  || this.state.data.pdfContent.tratado.docas } ref={(c) => this.submit.torre_docas = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.torre_docas = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Vagas</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.vagas }</p>\n                <input name = 'vagas' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.vagas } ref={(c) => this.submit.vagas = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.vagas = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Início Vigência</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_inicial }</p>\n                <input name = 'inicio_vigencia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.inicio_vigencia } ref={(c) => this.submit.inicio_vigencia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.inicio_vigencia = c} />Alterado</label>            \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Fim Vigência</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.prazo }</p>\n                <input name = 'fim_vigencia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.fim_vigencia } ref={(c) => this.submit.fim_vigencia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.fim_vigencia= c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Valor Aluguel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.valor_aluguel }</p>\n                <input name = 'valor_aluguel' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.valor_aluguel } ref={(c) => this.submit.valor_aluguel = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.valor_aluguel = c} />Alterado</label>                  \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data de Reajuste</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_reajuste }</p>\n                <input name = 'data_reajuste' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_reajuste } ref={(c) => this.submit.data_reajuste= c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.data_reajuste= c} />Alterado</label>        \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data Início da Carência</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_inicio_carencia}</p>\n                <input name = 'data_inicio_carencia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_inicio_carencia } ref={(c) => this.submit.data_inicio_carencia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.data_inicio_carencia = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data do Fim da Carência</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.periodo_carencia}</p>\n                <input name = 'data_fim_carencia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_fim_carencia } ref={(c) => this.submit.periodo_carencia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.periodo_carencia = c} />Alterado</label>       \n            </div>\n            {itemList}\n            <div className='card_data'>\n                <h4 className='title'>Reajuste Positivo</h4>\n                {/* <p className='subtitle'>{this.props.data.pdfContent.raw.reajuste_positivo}</p> */}\n                <input name = 'reajuste_positivo' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.reajuste_positivo } ref={(c) => this.submit.reajuste_positivo = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.reajuste_positivo = c} />Alterado</label>       \n\n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Índice do Reajuste</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.indice}</p>\n                <input name = 'indice' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.indice } ref={(c) => this.submit.indice = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.indice= c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Forma de Pagamento Aluguel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.pagamento_aluguel}</p>\n                <input name = 'pagamento_aluguel' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.pagamento_aluguel } ref={(c) => this.submit.pagamento_aluguel = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.pagamento_aluguel = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data de Pagamento do Aluguel</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_pagamento_aluguel}</p>\n                <input name = 'data_pagamento_aluguel' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_pagamento_aluguel } ref={(c) => this.submit.data_pagamento_aluguel = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.data_pagamento_aluguel = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Forma de Pagamento dos Encargos</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.pagamento_encargos}</p>\n                <input name = 'pagamento_encargos' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.pagamento_encargos } ref={(c) => this.submit.pagamento_encargos = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.pagamento_encargos = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data de Pagamento Encargos</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_pagamento_encargos}</p>\n                <input name = 'data_pagamento_encargos' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_pagamento_encargos } ref={(c) => this.submit.data_pagamento_encargos = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.data_pagamento_encargos = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Garantia</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.garantia}</p>\n                <input name = 'garantia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.garantia} ref={(c) => this.submit.garantia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.garantia = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Valor da Garantia</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.valor_garantia}</p>\n                <input name = 'valor_garantia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.valor_garantia} ref={(c) => this.submit.valor_garantia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.valor_garantia = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Aviso Prévio</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.aviso_previo}</p>\n                <input name = 'aviso_previo' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.aviso_previo} ref={(c) => this.submit.aviso_previo = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.aviso_previo = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Multa por Rescisão Antecipada</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.multa_rescisao_antecipado}</p>\n                <input name = 'multa_rescisao_antecipado' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.multa_rescisao_antecipado} ref={(c) => this.submit.multa_rescisao_antecipado = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.multa_rescisao_antecipado = c} />Alterado</label>        \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Multa Proporcional</h4>\n                {/* <p className='subtitle'>{this.props.data.pdfContent.raw.proporcional}</p> */}\n                <input name = 'proporcional' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.proporcional} ref={(c) => this.submit.proporcional= c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.proporcional = c} />Alterado</label>          \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Multa por Inadimplência</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.multa_inadimplencia}</p>\n                <input name = 'multa_inadimplencia' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.multa_inadimplencia} ref={(c) => this.submit.multa_inadimplencia = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.multa_inadimplencia = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Prazos para Multas</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.prazos_multas}</p>\n                <input name = 'prazos_multas' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.prazos_multas} ref={(c) => this.submit.prazos_multas = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.prazos_multas = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Juros ao mês</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.juros_ao_mes}</p>\n                <input name = 'juros_ao_mes' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.juros_ao_mes} ref={(c) => this.submit.juros_ao_mes = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.juros_ao_mes = c} />Alterado</label>       \n            </div>\n            <div className='card_data'>\n                <h4 className='title'>Data de Assinatura do Contrato</h4>\n                <p className='subtitle'>{this.state.data.pdfContent.raw.data_assinatura}</p>\n                <input name = 'data_assinatura' type='text' className='data_edit_big' defaultValue={this.state.data.pdfContent.tratado.data_assinatura} ref={(c) => this.submit.data_assinatura = c}></input>\n                <label className='alterado_check'><input className='alterado_check' type='checkbox' ref={(c) => this.check.data_assinatura = c} />Alterado</label>                 \n            </div>\n        </div>\n        </form>\n        <Loader loaded={this.state.loaded} ></Loader>\n        <div>\n            <button className='b_extrair' onClick={this.onSubmit}>Enviar</button>     \n        </div>\n        <Modal visible={this.state.good} className='modal-body'  effect=\"fadeInUp\" onClickAway={() => this.closeModal('good')}>\n                    <div className='card_data'>\n                        <h1>Contrato cadastrado com sucesso!</h1>\n                        <p className='content'>Recarregue a página para realizar um novo cadastro</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('good')}>Fechar</a>\n                    </div>     \n        </Modal>\n        <Modal visible={this.state.bad} className='modal-body'  effect=\"fadeInUp\" onClickAway={() => this.closeModal('bad')}>\n                    <div className='card_data'>\n                        <h1>Erro no cadastro</h1> \n                        <p className='content'>Isso pode acontecer pelas seguintes razões:</p>\n                        <ul>\n                            <li>Algum dado não está formatado da maneira correta</li>\n                            <li>Pode ter algum dado faltante</li>\n                            <li>Sua conexão pode estar instável</li>\n\n                        </ul>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal('bad')}>Fechar</a>\n                    </div>     \n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default EditExtracted;",{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":43,"column":45,"nodeType":"46","messageId":"47","endLine":43,"endColumn":47},{"ruleId":"44","severity":1,"message":"45","line":56,"column":52,"nodeType":"46","messageId":"47","endLine":56,"endColumn":54},{"ruleId":"44","severity":1,"message":"45","line":98,"column":37,"nodeType":"46","messageId":"47","endLine":98,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":102,"column":37,"nodeType":"46","messageId":"47","endLine":102,"endColumn":39},{"ruleId":"48","severity":1,"message":"49","line":188,"column":25,"nodeType":"50","endLine":188,"endColumn":96},{"ruleId":"51","severity":1,"message":"52","line":188,"column":33,"nodeType":"53","messageId":"54","endLine":188,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":195,"column":25,"nodeType":"50","endLine":195,"endColumn":93},{"ruleId":"51","severity":1,"message":"52","line":195,"column":33,"nodeType":"53","messageId":"54","endLine":195,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":202,"column":25,"nodeType":"50","endLine":202,"endColumn":97},{"ruleId":"51","severity":1,"message":"52","line":202,"column":33,"nodeType":"53","messageId":"54","endLine":202,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":209,"column":25,"nodeType":"50","endLine":209,"endColumn":99},{"ruleId":"51","severity":1,"message":"52","line":209,"column":33,"nodeType":"53","messageId":"54","endLine":209,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":406,"column":25,"nodeType":"50","endLine":406,"endColumn":95},{"ruleId":"51","severity":1,"message":"52","line":406,"column":33,"nodeType":"53","messageId":"54","endLine":406,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":419,"column":25,"nodeType":"50","endLine":419,"endColumn":94},{"ruleId":"51","severity":1,"message":"52","line":419,"column":33,"nodeType":"53","messageId":"54","endLine":419,"endColumn":54},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL"]