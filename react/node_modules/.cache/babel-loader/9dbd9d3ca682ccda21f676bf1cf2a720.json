{"ast":null,"code":"var _jsxFileName = \"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/Btn.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Btn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disabled: false\n    };\n  }\n\n  handler() {\n    let handler = this.props.handler(); // If promise is returned disable button\n\n    if (handler && Promise.resolve(handler)) {\n      // Disable button\n      this.setState({\n        disabled: true\n      }); // Un-disable button after promise has resolved or rejected\n\n      return handler.then(() => {\n        return this.setState({\n          disabled: false\n        });\n      }).catch(() => {\n        return this.setState({\n          disabled: false\n        });\n      });\n    }\n  }\n\n  attrs() {\n    return {\n      children: this.props.name,\n      type: 'button',\n      role: 'button',\n      onClick: this.handler.bind(this),\n      disabled: this.state.disabled\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", { ...this.attrs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Btn;","map":{"version":3,"sources":["/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/Btn.js"],"names":["React","Component","Btn","state","disabled","handler","props","Promise","resolve","setState","then","catch","attrs","children","name","type","role","onClick","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBE,KAFwB,GAEhB;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFgB;AAAA;;AAMxBC,EAAAA,OAAO,GAAG;AACN,QAAIA,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,EAAd,CADM,CAGN;;AACA,QAAIA,OAAO,IAAIE,OAAO,CAACC,OAAR,CAAgBH,OAAhB,CAAf,EAAyC;AACrC;AACA,WAAKI,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAE;AAAX,OAAd,EAFqC,CAGrC;;AACA,aAAOC,OAAO,CAACK,IAAR,CAAa,MAAM;AACtB,eAAO,KAAKD,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAAP;AACH,OAFM,EAEJO,KAFI,CAEE,MAAM;AACX,eAAO,KAAKF,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAAP;AACH,OAJM,CAAP;AAKH;AACJ;;AAEDQ,EAAAA,KAAK,GAAG;AACJ,WAAO;AACHC,MAAAA,QAAQ,EAAG,KAAKP,KAAL,CAAWQ,IADnB;AAEHC,MAAAA,IAAI,EAAO,QAFR;AAGHC,MAAAA,IAAI,EAAO,QAHR;AAIHC,MAAAA,OAAO,EAAI,KAAKZ,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CAJR;AAKHd,MAAAA,QAAQ,EAAG,KAAKD,KAAL,CAAWC;AALnB,KAAP;AAOH;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBAAO,uBAAY,KAAKP,KAAL;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAlCuB;;AAsC5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Btn extends Component {\n\n    state = {\n        disabled: false\n    };\n\n    handler() {\n        let handler = this.props.handler();\n\n        // If promise is returned disable button\n        if (handler && Promise.resolve(handler)) {\n            // Disable button\n            this.setState({disabled: true});\n            // Un-disable button after promise has resolved or rejected\n            return handler.then(() => {\n                return this.setState({disabled: false});\n            }).catch(() => {\n                return this.setState({disabled: false});\n            });\n        }\n    }\n\n    attrs() {\n        return {\n            children : this.props.name,\n            type     : 'button',\n            role     : 'button',\n            onClick  : this.handler.bind(this),\n            disabled : this.state.disabled\n        };\n    }\n\n    render() {\n        return <button {...this.attrs()} />;\n    }\n}\n\n\nexport default Btn;"]},"metadata":{},"sourceType":"module"}