{"ast":null,"code":"var _jsxFileName = \"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/FileUpload.js\";\nimport React from 'react';\nimport Btn from './Btn';\nimport LoadingOverlay from 'react-loading-overlay';\nimport './App.css';\nimport logo from \"./logo_kine.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Loader = require('react-loader');\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pdfURL: '',\n      loaded: false,\n      content: false\n    };\n    this.handleUploadPDF = this.handleUploadPDF.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState.loaded = false;\n  }\n\n  handleUploadPDF(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    this.setState({\n      loaded: true\n    });\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          pdfURL: body\n        });\n        console.log(this.state.pdfURL);\n      });\n      this.setState({\n        loaded: false,\n        content: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Upload do Contrato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Fa\\xE7a o upload do contrato para extrair seus dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleUploadPDF,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: ref => {\n              this.uploadInput = ref;\n            },\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Extrair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        loaded: !this.state.loaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), this.state.content ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteudo\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sucesso!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/FileUpload.js"],"names":["React","Btn","LoadingOverlay","Loader","require","Main","Component","constructor","props","state","pdfURL","loaded","content","handleUploadPDF","bind","componentDidMount","setState","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","console","log","render","logo","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Btn from './Btn'\nimport LoadingOverlay from 'react-loading-overlay';\nimport './App.css';\nimport logo from './logo_kine.svg'\n\nvar Loader = require('react-loader');\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pdfURL: '',\n      loaded: false,\n      content: false\n\n    };\n    this.handleUploadPDF = this.handleUploadPDF.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState.loaded=false;\n  }\n\n  handleUploadPDF(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    this.setState({loaded:true});\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({ pdfURL: body});\n        console.log(this.state.pdfURL)\n      });\n      this.setState({loaded:false, content: true});\n    });\n  }\n\n  render() {\n    return (\n      <div className='Box'>\n        <img src={logo} alt=\"Logo\" />\n        <h1 className='title'>Upload do Contrato</h1>\n        <p className='subtitle'>Fa√ßa o upload do contrato para extrair seus dados</p>\n      <form onSubmit={this.handleUploadPDF} >\n        <div>\n          <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\n        </div>\n        <br />\n        <div>\n          <button>Extrair</button>     \n        </div>\n      </form>\n      <Loader loaded={!this.state.loaded} ></Loader>\n      {this.state.content ? <div className='conteudo'><h3>Sucesso!</h3></div>:''}\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}