{"ast":null,"code":"var _jsxFileName = \"/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Btn from './Btn';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     imageURL: '',\n  //   };\n  //   this.handleUploadImage = this.handleUploadImage.bind(this);\n  // }\n  const [isActive, setIsActive] = useState(false);\n\n  const handleUploadImage = async ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          imageURL: body\n        });\n        console.log(this.state.imageURL);\n      }); // this.setState({isActive: false})\n    });\n  }; // render() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: () => handleUploadImage(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref => {\n          this.uploadInput = ref;\n        },\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Extrair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n} // }\n\n\n_s(Main, \"yg7bv8FIjJdQRAnw735AlCtTiF0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/gmonteiro42/Documents/Insper/Kinea/ContractReader/contract-reader/src/FileUpload.js"],"names":["React","useState","Btn","LoadingOverlay","Main","isActive","setIsActive","handleUploadImage","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","setState","imageURL","console","log","state","ref"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA,QAAO,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMM,iBAAiB,GAAG,MAAOC,EAAP,IAAc;AACtCA,IAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKC,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,CAApB;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,IAAI,EAAEP;AAF8B,KAAjC,CAAL,CAGGQ,IAHH,CAGSC,QAAD,IAAc;AACpBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBD,IAAD,IAAU;AAC7B,aAAKI,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEL;AAAZ,SAAd;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,QAAvB;AACD,OAHD,EADoB,CAKpB;AACD,KATD;AAUD,GAfD,CAbc,CA8Bd;;;AACE,sBACE;AAAM,IAAA,QAAQ,EAAE,MAAIf,iBAAiB,EAArC;AAAA,4BACE;AAAA,6BACE;AAAO,QAAA,GAAG,EAAGmB,GAAD,IAAS;AAAE,eAAKb,WAAL,GAAmBa,GAAnB;AAAyB,SAAhD;AAAkD,QAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,C,CACH;;;GAjDStB,I;;KAAAA,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Btn from './Btn'\nimport LoadingOverlay from 'react-loading-overlay';\n\nfunction Main() {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     imageURL: '',\n\n  //   };\n  //   this.handleUploadImage = this.handleUploadImage.bind(this);\n  // }\n\n  \n  const  [isActive,setIsActive] = useState(false)\n  const handleUploadImage = async (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({ imageURL: body });\n        console.log(this.state.imageURL)\n      });\n      // this.setState({isActive: false})\n    });\n  }\n\n  // render() {\n    return (\n      <form onSubmit={()=>handleUploadImage()} >\n        <div>\n          <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\n        </div>\n        <br />\n        <div>\n          <button>Extrair</button>\n        </div>\n        {/* <LoadingOverlay\n          active={isActive}\n          spinner\n          text='Aguarde...'\n          >\n        </LoadingOverlay> */}\n      </form>\n    );\n  }\n// }\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}